name: Deploy to Azure Container Apps

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      deploy_frontend:
        description: 'Deploy frontend'
        type: boolean
        default: true
      deploy_backend:
        description: 'Deploy backend'
        type: boolean
        default: true

env:
  REGISTRY_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
  REGISTRY_USERNAME: ${{ vars.ACR_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.ACR_PASSWORD }}
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
  LOCATION: ${{ vars.LOCATION }}
  CONTAINERAPPS_ENVIRONMENT: ${{ vars.CONTAINER_GROUP_NAME }}
  AZURE_SPEECH_KEY: ${{ secrets.AZURE_SPEECH_KEY }}
  AZURE_SPEECH_REGION: ${{ vars.AZURE_SPEECH_REGION }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push frontend container
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      
      - name: Build and push frontend container
        run: |
          docker build -t ${{ env.REGISTRY_LOGIN_SERVER }}/frontend:latest ./src/frontend
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/frontend:latest

      - name: Build and push backend container
        run: |
          docker build -t ${{ env.REGISTRY_LOGIN_SERVER }}/backend:latest ./src/backend
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/backend:latest

      - name: Create Container Apps Environment
        run: |
          az extension add --name containerapp --upgrade
          az containerapp env create \
            --name ${{ env.CONTAINERAPPS_ENVIRONMENT }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --location ${{ env.LOCATION }}

      - name: Deploy backend to Container Apps
        id: deploy-backend
        run: |
          az containerapp create \
            --name backend \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.CONTAINERAPPS_ENVIRONMENT }} \
            --image ${{ env.REGISTRY_LOGIN_SERVER }}/backend:latest \
            --registry-server ${{ env.REGISTRY_LOGIN_SERVER }} \
            --registry-username ${{ env.REGISTRY_USERNAME }} \
            --registry-password ${{ env.REGISTRY_PASSWORD }} \
            --target-port 3000 \
            --ingress external \
            --env-vars "AZURE_SPEECH_KEY=${{ env.AZURE_SPEECH_KEY }}" \
            --env-vars "AZURE_SPEECH_REGION=${{ env.AZURE_SPEECH_REGION }}" \
            --min-replicas 1 \
            --max-replicas 1 \
            --cpu 0.25 \
            --memory 0.5Gi
          BACKEND_FQDN=$(az containerapp show --name backend --resource-group ${{ env.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
          echo "BACKEND_FQDN=$BACKEND_FQDN" >> $GITHUB_ENV

      - name: Deploy frontend to Container Apps
        run: |
          az containerapp create \
            --name frontend \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.CONTAINERAPPS_ENVIRONMENT }} \
            --image ${{ env.REGISTRY_LOGIN_SERVER }}/frontend:latest \
            --registry-server ${{ env.REGISTRY_LOGIN_SERVER }} \
            --registry-username ${{ env.REGISTRY_USERNAME }} \
            --registry-password ${{ env.REGISTRY_PASSWORD }} \
            --target-port 80 \
            --ingress external \
            --env-vars "VITE_API_URL=https://${{ env.BACKEND_FQDN }}" \
            --min-replicas 1 \
            --max-replicas 1 \
            --cpu 0.25 \
            --memory 0.5Gi 